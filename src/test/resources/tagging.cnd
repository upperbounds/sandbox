/*
 * Copyright (c) 1997-2008 Day Management AG
 * Barfuesserplatz 6, 4001 Basel, Switzerland
 * All Rights Reserved.
 *
 * This software is the confidential and proprietary information of
 * Day Management AG, ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Day.
 */
<cq  = 'http://www.day.com/jcr/cq/1.0'>
<sling = 'http://sling.apache.org/jcr/sling/1.0'>

//----------------------------------------------------< Tags >------------------

/**
 * defines a single tag, but can also contain tags, thus creating a taxonomy
 */
[cq:Tag] > nt:hierarchyNode, mix:title
    orderable
    - sling:resourceType (String)
      = "cq/tagging/components/tag" mandatory autocreated
    - * (undefined) multiple
    - * (undefined)
    + * (nt:base) = cq:Tag version

//----------------------------------------------------< Taggable >--------------

/**
 * abstract base mixin for taggable content
 *
 * @node cq:tags
 */
[cq:Taggable]
    mixin
    - cq:tags (string) multiple

/**
 * only authors/owners are allowed to tag the content (moderated/administered tagging)
 */
[cq:OwnerTaggable] > cq:Taggable
    mixin

//----------------------------------------------------< User content >--------------
// TODO: implement user tagging and enable these node types then

/**
 * any user/public www can tag the content (Web2.0 style), used inside cq:userContent (see below)
 */
//[cq:UserTaggable] > cq:Taggable
//    mixin

/**
 * adds a cq:userContent subnode that can be modified by users; each
 * user will have his own cq:userContent/<userid> subnode, that typically
 * has the mixin cq:UserTaggable
 * TODO: does this belong into the cq-tagging project?
 */
//[cq:AllowsUserContent]
//    mixin
//    + cq:userContent (nt:unstructured)

//----------------------------------------------------< User content 2 >--------------
// TODO: extended variant, more explicitly defining the cq:userContent tree
//
//[cq:AllowsUserContent]
//    mixin
//    + cq:userContent (cq:UserContent)
//    
//[cq:UserContent] > nt:unstructured
//    // userids
//    + * (cq:UserData)
//    // other content
//    + * (nt:base)
//    
//[cq:UserData] > nt:unstructured, cq:UserTaggable
